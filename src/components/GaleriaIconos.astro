---
import { Fragment } from "astro/runtime/server/index.js";

const iconos = await Astro.glob("@assets/icons/*.svg");

const iconosConNombre = iconos.map((icon) => {
  const name = icon.default.src
    .split("/")
    .pop()
    .split("?")[0]
    .replace(".svg", "");
  return { src: icon.default.src, name };
});
---

<div class="input-field">
  <input id="buscar-icono" placeholder="Buscar iconos..." />
</div>

<div id="grid-iconos" class="grid-container">
  {
    iconosConNombre.map((icon) => (
      <div class="grid-item" data-name={icon.name.toLowerCase()}>
        <svg>
          <use href={icon.src} />
        </svg>
        <div class="name">
          <span>{icon.name}</span>
        </div>
      </div>
    ))
  }
</div>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const input = document.getElementById(
      "buscar-icono"
    ) as HTMLInputElement | null;
    const items = document.querySelectorAll<HTMLDivElement>(
      "#grid-iconos .grid-item"
    );

    if (input) {
      input.addEventListener("input", (e: Event) => {
        const target = e.target as HTMLInputElement | null;
        const valor = String(target?.value ?? "").toLowerCase();
        items.forEach((item) => {
          const nombre = item.dataset.name ?? "";
          item.style.display = nombre.includes(valor) ? "" : "none";
        });
      });
    }
  });
</script>

<style>
  .input-field {
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    padding: 0.25rem 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.5rem;

    & > input {
      background: transparent;
      border: none;
      outline: none;
      color: white;
      font-size: 1rem;
      flex: 1;
    }
  }

  .grid-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
    padding: 0.75rem 1.2rem;

    & .grid-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      aspect-ratio: 1/1;
      padding: 1rem;
      background-color: rgba(255, 255, 255, 0.05);
      border-radius: 0.5rem;
      transition: transform 0.2s;
      margin: 0;
      position: relative;

      & svg {
        fill: white !important;
        stroke: white !important;
        max-width: 32px;
        max-height: 32px;
      }

      & > .name {
        position: absolute;
        bottom: 0;
        opacity: 0;
        transform: translateY(100%);
        padding-inline: 0.5rem;
        padding-block: 0px;
        background-color: white;
        border-radius: 2px;
        color: black;
        font-weight: 500;
        font-size: 0.8rem;
        text-transform: uppercase;
      }
    }
  }

  .grid-item:hover {
    background-color: rgba(255, 255, 255, 0.3);
    cursor: pointer;

    & > svg {
      transform: scale(1.05);
    }

    & .name {
      opacity: 1;
    }
  }

</style>
